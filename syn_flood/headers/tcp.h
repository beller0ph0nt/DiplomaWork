#ifndef TCP_H_INCLUDED
#define TCP_H_INCLUDED

#include "types.h"

// Структура TCP заголовка.
struct tcp_header
{
    WORD source_port;               /* [2 байта]    Порт отправителя - число 0-65535, необходимое для идентификации программы прикладного уровня отправителя. */
    WORD destination_port;          /* [2 байта]    Порт получателя - число 0-65535, необходимое для идентификации программы прикладного уровня получателя. */
    DWORD sequence_number;          /* [4 байта]    Номер последовательности - порядковый номер первого байта в сегменте. */
    DWORD acknowledgement_number;   /* [4 байта]    Номер подтверждения - порядковый номер следующего ожидаемого байта в сегменте (Принимается во внимание только для пакетов с установленным флагом ACK). */
    BYTE unused:4;                  /* [4 бита]     Не используються. */
    BYTE header_length:4;           /* [4 бита]     Длинна заголовка - длинна заголовка без данных (Выражается в 32 битных словах). */
    BYTE flags;                     /* [1 байт]     Флаги - используются при обмене пакетами. */
// Флаги протокола TCP.
#define TCP_FLAG_FIN	0x01    /* Завершение соединения (FINal). */
#define TCP_FLAG_SYN	0x02	/* Синхронизация номеров последовательности (SYNchronize). */
#define TCP_FLAG_RST	0x04	/* Обрыв соединения (ReSeT). */
#define TCP_FLAG_PSH	0x08	/* Инструктирует получателя протолкнуть данные, накопившиеся в приемном буфере, в приложение пользоватея (PuSH). */
#define TCP_FLAG_ACK	0x10	/* Указывает на использование поля "Номер подтверждения" (ACKnowledgment). */
#define TCP_FLAG_URG	0x20	/* Указывает на использование поля "Указатель срочности" (URGent pointer). */
#define TCP_FLAG_ECE	0x40	/* Указывает отправителю о перегрузках в сети (ECN-Echo). */
#define TCP_FLAG_CWR	0x80	/* Устанавливается отправителем, чтобы указать, что получен пакет с установленным флагом ECE (Congestion Window Reduced). */
    WORD window_size;               /* [2 байта]    Размер окна - размер принимающего буфера (Выражается в октетах)*/
    WORD checksum;                  /* [2 байта]    Контрольная сума - контрольная сумма вычисляется путем прибавления к TCP заголовку псевдозаголовка (Область данных не учитывается). */
    WORD urgent_pointer;            /* [2 байта]    Указатель срочности - положительное смещение от порядкового номера в данном сегменте. Указывает порядковый номер октета, которым заканчиваются срочные данные (Принимается во внимание только для пакетов с установленным флагом URG). */
};

// Структура TCP псевдозаголовка (Необходим для расчета контрольной суммы).
struct tcp_pseudoheader
{
    DWORD source_ip_address;        /* [4 байта]    IP адресс отправителя - идентифицирует отправителя. */
    DWORD destination_ip_address;   /* [4 байта]    IP адресс получателя - идентифицирует получателя. */
    BYTE placeholder;               /* [1 байт]     Заполнитель - используеться для выравнивания (Заполняется нулями). */
    BYTE protocol;                  /* [1 байт]     Протокол - указывает на проокол TCP. */
    WORD length;                    /* [2 байта]    Длинна - указываеться общая длинна TCP сегмента вместе с заголовком (TCP заголовок + данные). */
};

#endif // TCP_H_INCLUDED
