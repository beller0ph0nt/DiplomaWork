#ifndef IP_H_INCLUDED
#define IP_H_INCLUDED

#include "types.h"

// Структура IP заголовка (Без опций).
struct ip_header
{
    BYTE header_length:4;				/* [4 бита]     Длина IP заголовка - 20 байт + длина опций (Выражается в 32-разрядных словах). */
    BYTE version:4;						/* [4 бита]		Версия протокола - версия протокола IP в настоящее время это 4 версия (IPv4). */
    BYTE type_of_service;				/* [1 байт]		Тип обслуживания - определяет способ обслуживания дейтаграммы. */
    WORD total_length;					/* [2 байта] 	Общая длинна - общая длинна дейтаграммы, включая заголовок и область данных (Выражется в октетах). */
    WORD identification;				/* [2 байта]	Идентификация - идентификатор дейтаграммы, значение обычно увеличивается на единицу с посылкой каждой дейтаграммы. */
    WORD flags_fragmentation_offset;	/* [3 бита] 	Флаги - используются при фрагментации (1 бит == 1 - фрагментация запрещена, 2 бит == 1 - фрагмент, является последним в дейтаграмме). */
    /* [13 бит]		Смещение заголовка - смещение данных во фрагменте, относительно начала исходной дейтаграммы (Выражется в октетах). */
// Флаги протокола IP.
#define IP_RF 0x8000		/* Зарезервированный флаг фрагментации. */
#define IP_DF 0x4000       	/* Флаг конца фрагментации. */
#define IP_MF 0x2000       	/* Флаг продолжения фрагментации. */
#define IP_OFF_MASK 0x1fff  /* Маска для битов фрагментации. */
    BYTE time_to_live;					/* [1 байт]		Время жизни - максимальное число маршрутизаторов, через которые может пройти дейтаграмма по сети. */
    BYTE protocol;						/* [1 байт]		Тип протокола - указвает к какому протоколу более высокого уровня относится данная дейтаграмма. */
    WORD header_checksum;				/* [2 байта]	Контрольная сума - контрольная сумма считается только для заголовка IP детаграммы, область данных не учитывается. */
    DWORD source_ip_address;			/* [4 байта]	IP адрес отправителя - идентифицирует отправителя. */
    DWORD destination_ip_address;		/* [4 байта]	IP адрес получателя - идентифицирует получателя. */
};

#endif // IP_H_INCLUDED
